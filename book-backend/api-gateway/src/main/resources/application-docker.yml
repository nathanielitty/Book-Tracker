server:
  port: 8080

spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      # CORS handled manually in AuthenticationFilter
      routes:
        # Auth Service Routes
        - id: auth-service-route
          uri: http://auth-service:8081
          predicates:
            - Path=/api/v1/auth/**

        # Book Service Routes  
        - id: book-service-route
          uri: http://book-service:8082
          predicates:
            - Path=/books/**
          
        # Library Service Routes
        - id: library-service-route
          uri: http://library-service:8084
          predicates:
            - Path=/api/v1/library/**
          filters:
            - RewritePath=/api/v1/library/(?<segment>.*), /api/library/$\{segment}
          
        # Notification Service Routes
        - id: notification-service-route
          uri: http://notification-service:8085
          predicates:
            - Path=/notifications/**
          filters:
            - RewritePath=/notifications/(?<segment>.*), /${segment}
          
        # Analytics Service Routes
        - id: analytics-service-route
          uri: http://analytics-service:8086
          predicates:
            - Path=/analytics/**
          filters:
            - RewritePath=/analytics/(?<segment>.*), /${segment}
            
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.web.reactive: DEBUG
    reactor.netty: DEBUG
    com.nathaniel.booktracker.gateway: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

# Disable Eureka
eureka:
  client:
    enabled: false
